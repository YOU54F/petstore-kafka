<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="af2ce02d-817e-4eff-a0ee-8e2d702dac06" created="3.44.1" activeEnvironment="Kafka Docker local" name="Kakfa-Petstore" projectVersion="" updated="3.44.1 2023-03-15T15:35:59Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:MessageDrivenService" id="a27aa0e8-24eb-46df-9668-a9abb865e2b2" name="Petstore Kafka - Pets" type="messagedrivenservice" definitionVersion="1.0.0" definitionUrl="file:/C:/Users/frank.kilcommins/Downloads/SwaggerPMTests-petstore-kafka-pets-1.0.0-swagger.yaml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>A simple demo API based on a real implementation. 
This is part of a stack.</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/C:/Users/frank.kilcommins/Downloads/SwaggerPMTests-petstore-kafka-pets-1.0.0-swagger.yaml">
      <con:part>
        <con:url>file:/C:/Users/frank.kilcommins/Downloads/SwaggerPMTests-petstore-kafka-pets-1.0.0-swagger.yaml</con:url>
        <con:content>asyncapi: '2.4.0'
info:
  title: Petstore Kafka - Pets
  version: '1.0.0'
  description: |
    A simple demo API based on a real implementation. 
    This is part of a stack.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  local:
    url: localhost:9092
    protocol: kafka
    description: When running the dev stack.
  compose:
    url: kafka:9092
    protocol: kafka
    description: When running within docker-compose
  
defaultContentType: application/json

channels:
  pets.added:
    description: Pets that are added
    publish:
      summary: New Pet added.
      operationId: addPet
      traits:
        - $ref: '#/components/operationTraits/kafka'
      message:
        description: New Pets
        payload: 
          $ref: "https://api.swaggerhub.com/domains/SwaggerPMTests/petstore-common/1.0.0#/components/schemas/NewPet"

  pets.statusChanged:
    description: |
      Cache pet statuses to know if an adoption is possible.
    subscribe:
      summary: Pet's status has changed.
      operationId: cachePetStatus
      traits:
        - $ref: '#/components/operationTraits/kafka'
      message:
        description: New Pets
        payload: 
          $ref: "https://api.swaggerhub.com/domains/SwaggerPMTests/petstore-common/1.0.0#/components/schemas/PetStatusChange"

components:
  operationTraits:
    kafka:
      bindings:
        kafka:
          clientId: 
            type: string</con:content>
        <con:type>https://www.asyncapi.com/docs/specifications/2.0.0</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>kafka:9092</con:endpoint>
      <con:endpoint>localhost:9092</con:endpoint>
    </con:endpoints>
    <con:environmentSpec>
      <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
        <con:authProfile>Inherit From Parent</con:authProfile>
      </con:entry>
    </con:environmentSpec>
    <con:channel name="pets.added" id="cefa5f00-f172-4e42-bbba-e64d46e86609">
      <con:description>Pets that are added</con:description>
      <con:settings/>
      <con:subscribeOperation name="Subscribe" id="f1a87fe0-7dad-4448-963a-62ca07aae60e">
        <con:settings/>
        <con:environmentSpec>
          <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:subscribeOperation>
      <con:publishOperation name="Publish" id="3ac543b4-62d0-4cc1-b345-66e67608a7b7">
        <con:settings/>
        <con:environmentSpec>
          <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:publishOperation>
      <con:environmentSpec>
        <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
          <con:authProfile>Inherit From Parent</con:authProfile>
        </con:entry>
      </con:environmentSpec>
    </con:channel>
    <con:channel name="pets.statusChanged" id="44614174-262f-4159-b7d4-c6cfca5b89b5">
      <con:description>Cache pet statuses to know if an adoption is possible.</con:description>
      <con:settings/>
      <con:subscribeOperation name="Subscribe" id="87fb3d7c-7d76-4028-afd3-62c6749c4d51">
        <con:settings/>
        <con:environmentSpec>
          <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:subscribeOperation>
      <con:publishOperation name="Publish" id="d1391078-92f3-4e10-8a86-bc0f4fe04697">
        <con:settings/>
        <con:environmentSpec>
          <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:publishOperation>
      <con:environmentSpec>
        <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
          <con:authProfile>Inherit From Parent</con:authProfile>
        </con:entry>
      </con:environmentSpec>
    </con:channel>
  </con:interface>
  <con:interface xsi:type="con:RestService" id="c685d132-0bd3-4a7f-9665-00a3a017ce46" name="Pets and Adoption API" type="rest_ex" wadlVersion="https://swagger.io/openapiv3/specification" definitionUrl="https://api.swaggerhub.com/apis/SwaggerPMTests/Pets-Adoption-API/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>An API for tracking **Pets** and **Pet Adoptions** across our event and REST based petstore. This OpenAPI definition describes the RESTful APIs offered by the store.

Links:
- [The code repository housing the implementation](https://github.com/swagger-api/petstore-kafka)

Other useful information related to this API:</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="https://api.swaggerhub.com/apis/SwaggerPMTests/Pets-Adoption-API/1.0.0">
      <con:part>
        <con:url>https://api.swaggerhub.com/apis/SwaggerPMTests/Pets-Adoption-API/1.0.0</con:url>
        <con:content>{"openapi":"3.0.0","info":{"title":"Pets and Adoption API","description":"An API for tracking **Pets** and **Pet Adoptions** across our event and REST based petstore. This OpenAPI definition describes the RESTful APIs offered by the store.\n\nLinks:\n- [The code repository housing the implementation](https://github.com/swagger-api/petstore-kafka)\n\nOther useful information related to this API:\n","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"version":"1.0.0"},"servers":[{"url":"https://virtserver.swaggerhub.com/SwaggerPMTests/Pets-Adoption-API/1.0.0","description":"SwaggerHub API Auto Mocking"},{"url":"http://localhost:80/api","description":"Local Docker"}],"tags":[{"name":"pets","description":"Everything about your Pets"},{"name":"adoptions","description":"Adoption information for pets in our stores"}],"paths":{"/pets/{id}":{"patch":{"tags":["pets"],"summary":"Update the status of a pet","description":"Use this operation to update the adoption status of a pet","operationId":"patchPetStatus","parameters":[{"name":"id","in":"path","description":"The identifier for the path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":"a76b67cb-7976-4b94-af8e-381688c915ad"}}],"requestBody":{"description":"the new status information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PetStatus"}}},"required":true},"responses":{"200":{"description":"Pet status updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Pet"}}}},"404":{"description":"Pet not found"}}}},"/adoptions":{"get":{"tags":["adoptions"],"summary":"Get a list of current pet adoptions","description":"A list of adoptions with information on their status and pet","operationId":"getAdoptions","parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":false,"style":"form","explode":true,"schema":{"type":"string","description":"the adoption status","enum":["requested","pending","available","denied","approved"]}},{"name":"location","in":"query","description":"the store location of the pet adoption","required":false,"style":"form","explode":true,"schema":{"type":"string","example":"Plett"}}],"responses":{"200":{"description":"Get Adoptions response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Adoptions"}}}},"default":{"description":"Get Adoptions response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Adoptions"}}}}}},"post":{"tags":["adoptions"],"summary":"Add a new adoption","description":"Add a new pet to the store","operationId":"postAdoption","requestBody":{"description":"Create a new adoption request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewAdoption"}}},"required":true},"responses":{"201":{"description":"Pet Created Successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Adoption"}}}}}}},"/adoptions/{id}":{"patch":{"tags":["adoptions"],"summary":"Update the status of an adoption","description":"Use this operation to update the adoption status of an adoption","operationId":"patchAdoptionStatus","parameters":[{"name":"id","in":"path","description":"The identifier for the path","required":true,"style":"simple","explode":false,"schema":{"type":"string","example":"a76b67cb-7976-4b94-af8e-381688c915ad"}}],"requestBody":{"description":"the new status information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AdoptionStatus"}}},"required":true},"responses":{"200":{"description":"Pet status updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Adoption"}}}},"404":{"description":"Adoption not found"}}}},"/pets":{"description":"","get":{"description":"A list of pets with information on their status and location","parameters":[{"name":"status","in":"query","required":false,"schema":{"type":"string"}},{"name":"location","in":"query","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Get Pets response","content":{"application/json":{"example":""}}}}},"post":{"description":"Add a new pet to the store","parameters":[{"name":"status","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"example":"{\r\n  \"name\" : \"Rover\",\r\n  \"location\" : \"plett\",\r\n  \"id\" : \"a76b67cb-7976-4b94-af8e-381688c915ad\",\r\n  \"status\" : \"available\"\r\n}"}}},"responses":{"201":{"description":"Pet Created Successfully","content":{"application/json":{"example":""}}}}}}},"components":{"schemas":{"Pet":{"type":"object","properties":{"name":{"type":"string","description":"the name of the pet","example":"Rover"},"location":{"type":"string","description":"the store location housing the pet","example":"plett"},"id":{"type":"string","description":"a _guid_ identifier of the pet","example":"a76b67cb-7976-4b94-af8e-381688c915ad"},"status":{"type":"string","description":"the adoption status of the pet","example":"available","default":"available","enum":["available","pending","onhold","adopted"]}}},"Pets":{"type":"array","items":{"$ref":"#/components/schemas/Pet"}},"PetStatus":{"type":"object","properties":{"status":{"type":"string","description":"the adoption status of the pet","example":"available","default":"available","enum":["available","pending","onhold","adopted"]}}},"AdoptionReason":{"type":"object","properties":{"petId":{"type":"string","description":"the pet id"},"message":{"type":"string","description":"a custom note providing some additional context about the reason for adopting the pet"}}},"Adoption":{"type":"object","properties":{"id":{"type":"string","description":"a _guid_ identifier of the adoption","example":"a76b67cb-7976-4b94-af8e-381688c915ad"},"status":{"type":"string","description":"the status of the adoption","example":"requested","enum":["requested","pending","available","denied","approved"]},"pets":{"type":"array","items":{"type":"string"}},"reasons":{"type":"array","items":{"$ref":"#/components/schemas/AdoptionReason"}}}},"Adoptions":{"type":"array","items":{"$ref":"#/components/schemas/Adoption"}},"NewAdoption":{"type":"object","properties":{"pets":{"type":"array","description":"the pets to be part of this adoption","items":{"type":"string"}},"location":{"type":"string","description":"the location of the pet adoption"}}},"AdoptionStatus":{"type":"object","properties":{"status":{"type":"string","description":"the adoption status of the pet","example":"approved","enum":["requested","pending","available","denied","approved"]}}}}}}</con:content>
        <con:type>https://swagger.io/openapiv3/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://localhost:80/api</con:endpoint>
      <con:endpoint>https://virtserver.swaggerhub.com/SwaggerPMTests/Pets-Adoption-API/1.0.0</con:endpoint>
    </con:endpoints>
    <con:resource name="/pets" path="/pets" id="11df628c-7f0c-4843-8481-954d66c00a1d">
      <con:settings/>
      <con:parameters/>
      <con:method name="getPets" id="619f856e-660d-4672-8de9-1025d6f3acff" method="GET">
        <con:description>A list of pets with information on their status and location</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>status</con:name>
            <con:value>available</con:value>
            <con:style>QUERY</con:style>
            <con:default>available</con:default>
            <con:description>Status values that need to be considered for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>location</con:name>
            <con:style>QUERY</con:style>
            <con:description>the store location of the pet</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Get Pets response</con:description>
          <con:sampleContent>[ {
  "name" : "Rover",
  "location" : "plett",
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",
  "status" : "available"
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="7e699173-300b-44bf-9076-d1d6545aabc6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:80/api</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="postPet" id="e091a95f-52a7-4e4d-a79c-1a43c462abb3" method="POST">
        <con:description>Add a new pet to the store</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:description>Pet Created Successfully</con:description>
          <con:sampleContent>{
  "name" : "Rover",
  "location" : "plett",
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",
  "status" : "available"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "name" : "Rover",
  "location" : "plett",
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",
  "status" : "available"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="5d072644-d94a-464c-bd56-0dcfc812b64f" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://localhost:80/api</con:endpoint>
          <con:request>{\r
  "name" : "Rover",\r
  "location" : "plett",\r
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",\r
  "status" : "available"\r
}</con:request>
          <con:originalUri>http://localhost/api/pets</con:originalUri>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
          <con:parameterOrder/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/pets/{id}" path="/pets/{id}" id="5a3ada8f-a5ee-4505-996f-3b8919fb9de9">
      <con:settings/>
      <con:parameters/>
      <con:method name="patchPetStatus" id="28bc05d9-ed70-41db-8679-40a67dd340ae" method="PATCH">
        <con:description>Use this operation to update the adoption status of a pet</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>id</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The identifier for the path</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Pet status updated successfully</con:description>
          <con:sampleContent>{
  "name" : "Rover",
  "location" : "plett",
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",
  "status" : "available"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "status" : "available"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="35cc33ed-3ef3-4e1f-816d-a5297e900d78" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:80/api</con:endpoint>
          <con:request>{\r
  "status" : "available"\r
}</con:request>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/adoptions" path="/adoptions" id="c9fd772d-bcf4-4785-b9ed-309b89c13647">
      <con:settings/>
      <con:parameters/>
      <con:method name="getAdoptions" id="e22cece1-f42f-47d5-b66e-3ae43b81d4c6" method="GET">
        <con:description>A list of adoptions with information on their status and pet</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>status</con:name>
            <con:style>QUERY</con:style>
            <con:description>Status values that need to be considered for filter</con:description>
          </con:parameter>
          <con:parameter>
            <con:name>location</con:name>
            <con:style>QUERY</con:style>
            <con:description>the store location of the pet adoption</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Get Adoptions response</con:description>
          <con:sampleContent>[ {
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",
  "status" : "requested",
  "pets" : [ "string" ],
  "reasons" : [ {
    "petId" : "string",
    "message" : "string"
  } ]
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="b783b090-5cca-4763-820b-30f0b3b0cfc6" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:80/api</con:endpoint>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="postAdoption" id="e6a2f8e4-536e-46ed-b62b-9bb4f01b6f13" method="POST">
        <con:description>Add a new pet to the store</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:description>Pet Created Successfully</con:description>
          <con:sampleContent>{
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",
  "status" : "requested",
  "pets" : [ "string" ],
  "reasons" : [ {
    "petId" : "string",
    "message" : "string"
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "pets" : [ "string" ],
  "location" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="3df203d6-3dc5-4656-b401-65594e2d70fe" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:80/api</con:endpoint>
          <con:request>{\r
  "pets" : [ "string" ],\r
  "location" : "string"\r
}</con:request>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/adoptions/{id}" path="/adoptions/{id}" id="a6d97797-f5b0-469c-82ed-db3a0e054551">
      <con:settings/>
      <con:parameters/>
      <con:method name="patchAdoptionStatus" id="318f397a-bdaa-4257-b8a5-1f6704b7d817" method="PATCH">
        <con:description>Use this operation to update the adoption status of an adoption</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>id</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The identifier for the path</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Pet status updated successfully</con:description>
          <con:sampleContent>{
  "id" : "a76b67cb-7976-4b94-af8e-381688c915ad",
  "status" : "requested",
  "pets" : [ "string" ],
  "reasons" : [ {
    "petId" : "string",
    "message" : "string"
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "status" : "approved"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="81b331d7-ac73-4c23-a6c9-0e73c41ee67b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://localhost:80/api</con:endpoint>
          <con:request>{\r
  "status" : "approved"\r
}</con:request>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:MessageDrivenService" id="aed9a7fe-414b-4b03-81ca-e6197f519896" name="Petstore Kafka - Adoptions" type="messagedrivenservice" definitionVersion="1.0.0" definitionUrl="file:/C:/Users/frank.kilcommins/Downloads/SwaggerPMTests-petstore-kafka-adoptions-1.0.0-swagger.yaml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>A simple demo API based on a real implementation. 
This is part of a stack.</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="file:/C:/Users/frank.kilcommins/Downloads/SwaggerPMTests-petstore-kafka-adoptions-1.0.0-swagger.yaml">
      <con:part>
        <con:url>file:/C:/Users/frank.kilcommins/Downloads/SwaggerPMTests-petstore-kafka-adoptions-1.0.0-swagger.yaml</con:url>
        <con:content>asyncapi: '2.6.0'
info:
  title: Petstore Kafka - Adoptions
  version: '1.0.0'
  description: |
    A simple demo API based on a real implementation. 
    This is part of a stack.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  local:
    url: localhost:9092
    protocol: kafka
    description: When running the dev stack.
  compose:
    url: kafka:9092
    protocol: kafka
    description: When running within docker-compose
  

defaultContentType: application/json

channels:
  adoptions.request:
    description: A new adoption was requested
    publish:
      summary: New Adoption.
      operationId: addAdoption
      traits:
        - $ref: '#/components/operationTraits/kafka'
      message:
        payload: 
          $ref: "https://api.swaggerhub.com/domains/SwaggerPMTests/petstore-common/1.0.0#/components/schemas/NewAdoption"

  adoptions.statusChanged:
    description: The status of the Adoption has changed.
    subscribe:
      traits: 
        - $ref: '#/components/operationTraits/kafka'
      message:
        description: Adoption status changed
        payload: 
          $ref: "https://api.swaggerhub.com/domains/SwaggerPMTests/petstore-common/1.0.0#/components/schemas/AdoptionStatusChanged"
    publish:
      traits: 
        - $ref: '#/components/operationTraits/kafka'
      message:
        description: Adoption status changed
        payload: 
          $ref: "https://api.swaggerhub.com/domains/SwaggerPMTests/petstore-common/1.0.0#/components/schemas/AdoptionStatusChanged"
          
  pets.statusChanged:
    description: The status of the Pet has changed.
    subscribe:
      summary: Pet's status has changed.
      operationId: changePetStatus
      traits:
        - $ref: '#/components/operationTraits/kafka'
      message:
        description: New Pets
        payload: 
          $ref: "https://api.swaggerhub.com/domains/SwaggerPMTests/petstore-common/1.0.0#/components/schemas/PetStatusChange"

components:
  operationTraits:
    kafka:
      bindings:
        kafka:
          clientId: 
            type: string
            const: adoptions</con:content>
        <con:type>https://www.asyncapi.com/docs/specifications/2.0.0</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>kafka:9092</con:endpoint>
      <con:endpoint>localhost:9092</con:endpoint>
    </con:endpoints>
    <con:channel name="adoptions.request" id="617f36ab-ddf4-4227-8cd4-a56fa384d3bb">
      <con:description>A new adoption was requested</con:description>
      <con:settings/>
      <con:publishOperation name="Publish" id="12f95a6d-0679-47ec-8127-c1131e572b98">
        <con:settings/>
      </con:publishOperation>
    </con:channel>
    <con:channel name="adoptions.statusChanged" id="9cef532d-e9c8-4b83-b909-9a4fbd773894">
      <con:description>The status of the Adoption has changed.</con:description>
      <con:settings/>
      <con:subscribeOperation name="Subscribe" id="cdac7d6e-698f-4c4b-88c1-f31a9acc12d2">
        <con:settings/>
      </con:subscribeOperation>
      <con:publishOperation name="Publish" id="bf8f5107-2c0b-47b4-86ca-868474f552f5">
        <con:settings/>
      </con:publishOperation>
    </con:channel>
    <con:channel name="pets.statusChanged" id="ec767039-2f85-43ee-a272-35c874f02594">
      <con:description>The status of the Pet has changed.</con:description>
      <con:settings/>
      <con:subscribeOperation name="Subscribe" id="92b22d7c-8731-4e44-8956-3803d1fbf87a">
        <con:settings/>
      </con:subscribeOperation>
    </con:channel>
  </con:interface>
  <con:testSuite id="1354f79d-aa0d-4a7a-a8a3-8a69c1c7846a" name="(Kafka) - Pets added Pub/Sub verification">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="6b5c4003-df70-49db-9ad7-88451540cb6f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="pets.added topic tests" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="multiConfigureTestStep" name="Subscribe" id="4bfe7ce2-94c0-4ac1-9900-a40c6cc35d73">
        <con:settings/>
        <con:config activeStep="kafkaSubscribeTestStep" xsi:type="con:MultiConfigurationStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:kafkaSubscribeStep>
            <con:operationId>f1a87fe0-7dad-4448-963a-62ca07aae60e</con:operationId>
            <con:operationName>Subscribe</con:operationName>
            <con:channelName>pets.added</con:channelName>
            <con:serviceName>Petstore Kafka - Pets</con:serviceName>
            <con:endpoint>{{kafka</con:endpoint>
            <con:connectionProperties/>
            <con:schemaRegistry/>
            <con:environmentSpec>
              <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
                <con:connectionSettings>
                  <con:subscribeProperties/>
                  <con:schemaRegistry/>
                  <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
                  <con:maxIdleTime>5</con:maxIdleTime>
                  <con:maxMessagesReceived>50</con:maxMessagesReceived>
                  <con:maxRunTime>5</con:maxRunTime>
                  <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
                </con:connectionSettings>
              </con:entry>
            </con:environmentSpec>
            <con:messageType>JSON</con:messageType>
            <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
            <con:maxIdleTime>60</con:maxIdleTime>
            <con:maxMessagesReceived>50</con:maxMessagesReceived>
            <con:maxRunTime>60</con:maxRunTime>
            <con:assertion type="JsonPath Existence Match" id="de80b5af-72a2-4d14-b284-621f5e8f7993" name="JSONPath Existence Match">
              <con:configuration>
                <path>$.name</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="DataAndMetadataAssertion" id="ae163c5e-6a9b-4517-885b-7bf9a9d3a28e" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['name']</con:path>
                  <con:element>name</con:element>
                  <con:operatorId>9</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Sam</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>9</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>9</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>onhold</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>12</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>8483193c-7848-4d47-bf52-033785f2d009</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{
  "name": "Sam",
  "location": "Galway",
  "status": "onhold",
  "id": "8483193c-7848-4d47-bf52-033785f2d009"
}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
          </con:kafkaSubscribeStep>
        </con:config>
      </con:testStep>
      <con:testStep type="multiConfigureTestStep" name="Publish" id="967c2579-de5a-4698-987f-6177412b0304">
        <con:settings/>
        <con:config activeStep="kafkaPublishTestStep" xsi:type="con:MultiConfigurationStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:kafkaPublishStep>
            <con:operationId>3ac543b4-62d0-4cc1-b345-66e67608a7b7</con:operationId>
            <con:operationName>Publish</con:operationName>
            <con:channelName>pets.added</con:channelName>
            <con:serviceName>Petstore Kafka - Pets</con:serviceName>
            <con:endpoint>kafka:9092</con:endpoint>
            <con:connectionProperties/>
            <con:schemaRegistry/>
            <con:environmentSpec>
              <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
            <con:messageType>JSON</con:messageType>
            <con:message>{\r
   "name" : "Sam",\r
   "location" : "Galway",\r
   "status" : "onhold",\r
   "id" : "8483193c-7848-4d47-bf52-033785f2d009"\r
}</con:message>
            <con:parameters>
              <con:parameter>
                <con:name>Parameter</con:name>
                <con:value xsi:nil="true"/>
                <con:type>Header</con:type>
              </con:parameter>
            </con:parameters>
          </con:kafkaPublishStep>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>4bfe7ce2-94c0-4ac1-9900-a40c6cc35d73</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>967c2579-de5a-4698-987f-6177412b0304</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:environmentSpec>
        <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
          <con:authProfile>Inherit From Parent</con:authProfile>
        </con:entry>
      </con:environmentSpec>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
    <con:environmentSpec>
      <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
        <con:authProfile>Inherit From Parent</con:authProfile>
      </con:entry>
    </con:environmentSpec>
  </con:testSuite>
  <con:testSuite id="3615ca43-51d4-4f8e-8485-e19c7aa194f2" name="(REST) - Pets and Adoptions API - Tests">
    <con:description>The test suite generated for the REST service [Pets and Adoption API]</con:description>
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="4e33003b-1f79-4e68-a024-e77fcd9d6e56" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="/pets Test Case" searchProperties="true" timeout="0">
      <con:description>The test case generated for the REST resource [/pets] located at [/pets]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="GET pets" id="5001fc30-e741-43e3-b8a6-81bdbca82496">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/pets" methodName="getPets" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET pets" id="7e699173-300b-44bf-9076-d1d6545aabc6" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/api/pets</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="c67787ff-0137-4699-8632-0247a9205a2c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="status" value=""/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST pets" id="b8b58a79-36f3-42fb-b6a1-58445731c1df">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/pets" methodName="postPet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST pets" id="5d072644-d94a-464c-bd56-0dcfc812b64f" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request>{\r
  "name" : "Toby",\r
  "location" : "Galway",\r
  "status" : "onhold"\r
}</con:request>
            <con:originalUri>http://localhost/api/pets</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="2ec9cdbd-46ef-47a7-b2a2-f1da90cf9b3e" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="DataAndMetadataAssertion" id="0718ac4d-5ecb-4f4b-bff0-e57ba9e9b9fc" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['name']</con:path>
                  <con:element>name</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Toby</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>onhold</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>169ffbf1-b5d9-4056-bfa9-708c77692f62</con:expectedValue>
                  <con:caseSensitive>false</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{"name":"Toby","location":"Galway","status":"available","id":"169ffbf1-b5d9-4056-bfa9-708c77692f62"}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="6ecf1a8f-5d16-4596-a44a-dadb7926c80b" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="/pets/{id} Test Case" searchProperties="true" timeout="0">
      <con:description>The test case generated for the REST resource [/pets/{id}] located at [/pets/{id}]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="PATCH status" id="af21d84f-7aaa-464b-b369-f499df72cb84">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/pets/{id}" methodName="patchPetStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PATCH status" id="35cc33ed-3ef3-4e1f-816d-a5297e900d78" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request>{\r
  "status" : "available"\r
}</con:request>
            <con:originalUri>http://localhost/api/pets/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="e4e963d3-35d4-4d2a-854e-29a6e279aec2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="DataAndMetadataAssertion" id="56704896-2e2e-4422-8ab5-7c2d69dd247c" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['name']</con:path>
                  <con:element>name</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Toby</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>available</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>74831936-7848-4e47-bf52-033785f2d142</con:expectedValue>
                  <con:caseSensitive>false</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{"name":"Toby","location":"Galway","status":"available","id":"74831936-7848-4e47-bf52-033785f2d142"}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="id" value="${#[Pets and Adoptions API - Tests#/pets Test Case#POST pets]#Response#$['id']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="f8469c00-d6be-472f-be06-ac5b76ac59db" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="/adoptions Test Case" searchProperties="true" timeout="0">
      <con:description>The test case generated for the REST resource [/adoptions] located at [/adoptions]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="GET adoptions" id="db231c69-2270-4acb-92e2-7642844f0bf8">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/adoptions" methodName="getAdoptions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GET adoptions" id="b783b090-5cca-4763-820b-30f0b3b0cfc6" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request/>
            <con:originalUri>http://localhost/api/adoptions</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="540b400d-dded-42a1-b9e6-8379c7a2f82b" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST adoptions" id="03b4a83b-9219-41f0-a7ac-7ee26919570c">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/adoptions" methodName="postAdoption" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST adoptions" id="3df203d6-3dc5-4656-b401-65594e2d70fe" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request>{\r
  "pets" : [ "${#[Pets and Adoptions API - Tests#/pets Test Case#POST pets]#Response#$['id']}" ],\r
  "location" : "${#[Pets and Adoptions API - Tests#/pets Test Case#POST pets]#Response#$['location']}"\r
}</con:request>
            <con:originalUri>http://localhost/api/adoptions</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="ec97cb9f-90a3-4509-aa8f-a209964c1055" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="9dc6bc63-d4c4-4abd-9544-00309dc046e0" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="/adoptions/{id} Test Case" searchProperties="true" timeout="0">
      <con:description>The test case generated for the REST resource [/adoptions/{id}] located at [/adoptions/{id}]</con:description>
      <con:settings/>
      <con:testStep type="restrequest" name="PATCH and Approve Adoption" id="354a433c-19c8-430d-a31c-8ba53175eb2b">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/adoptions/{id}" methodName="patchAdoptionStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PATCH and Approve Adoption" id="81b331d7-ac73-4c23-a6c9-0e73c41ee67b" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request>{\r
  "status" : "approved"\r
}</con:request>
            <con:originalUri>http://localhost/api/adoptions/6e168e2f-cbd7-4ee8-805b-f0b2d058ca4d</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="83894b53-9435-43ad-b07e-0451f166805b" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="DataAndMetadataAssertion" id="71df06b3-f21a-4bb8-8928-5e3037ddbde0" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['pets'][0]</con:path>
                  <con:element>0</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>74831936-7848-4e47-bf52-033785f2d142</con:expectedValue>
                  <con:caseSensitive>false</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>false</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>6e168e2f-cbd7-4ee8-805b-f0b2d058ca4d</con:expectedValue>
                  <con:caseSensitive>false</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>approved</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{"pets":["74831936-7848-4e47-bf52-033785f2d142"],"location":"Galway","id":"6e168e2f-cbd7-4ee8-805b-f0b2d058ca4d","status":"approved"}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="id" value="${#[Pets and Adoptions API - Tests#/adoptions Test Case#POST adoptions]#Response#$['id']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite id="89b780d6-46f5-4042-8c12-1c8464c491d9" name="(Multi-Protocol) - Add PET - Update status - Verify events">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="73cf57c6-4a71-4039-b3c3-8a339a626ac9" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Add Pet and verify event" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="multiConfigureTestStep" name="Subscribe to pets.added topic" id="3170764d-fa61-4ed9-a108-9fb87e7a3859">
        <con:settings/>
        <con:config activeStep="kafkaSubscribeTestStep" xsi:type="con:MultiConfigurationStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:kafkaSubscribeStep>
            <con:operationId>f1a87fe0-7dad-4448-963a-62ca07aae60e</con:operationId>
            <con:operationName>Subscribe</con:operationName>
            <con:channelName>pets.added</con:channelName>
            <con:serviceName>Petstore Kafka - Pets</con:serviceName>
            <con:endpoint>{{kafka</con:endpoint>
            <con:connectionProperties/>
            <con:schemaRegistry/>
            <con:environmentSpec>
              <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
                <con:connectionSettings>
                  <con:subscribeProperties/>
                  <con:schemaRegistry/>
                  <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
                  <con:maxIdleTime>5</con:maxIdleTime>
                  <con:maxMessagesReceived>1</con:maxMessagesReceived>
                  <con:maxRunTime>5</con:maxRunTime>
                  <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
                </con:connectionSettings>
              </con:entry>
            </con:environmentSpec>
            <con:messageType>JSON</con:messageType>
            <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
            <con:maxIdleTime>60</con:maxIdleTime>
            <con:maxMessagesReceived>50</con:maxMessagesReceived>
            <con:maxRunTime>60</con:maxRunTime>
            <con:assertion type="JsonPath Existence Match" id="de80b5af-72a2-4d14-b284-621f5e8f7993" name="JSONPath Existence Match">
              <con:configuration>
                <path>$.name</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="DataAndMetadataAssertion" id="ae163c5e-6a9b-4517-885b-7bf9a9d3a28e" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['name']</con:path>
                  <con:element>name</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>TobyPost</con:expectedValue>
                  <con:caseSensitive>false</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>9</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>9</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>onhold</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>12</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>8483193c-7848-4d47-bf52-033785f2d009</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{
  "name": "Sam",
  "location": "Galway",
  "status": "onhold",
  "id": "8483193c-7848-4d47-bf52-033785f2d009"
}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
          </con:kafkaSubscribeStep>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="POST pets" id="2a8e90a9-8284-4f99-b3bd-c07f8e9a58a4">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/pets" methodName="postPet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="POST pets" id="5d072644-d94a-464c-bd56-0dcfc812b64f" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request>{\r
  "name" : "TobyPost",\r
  "location" : "Galway",\r
  "status" : "onhold"\r
}</con:request>
            <con:originalUri>http://localhost/api/pets</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="2ec9cdbd-46ef-47a7-b2a2-f1da90cf9b3e" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="DataAndMetadataAssertion" id="0718ac4d-5ecb-4f4b-bff0-e57ba9e9b9fc" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['name']</con:path>
                  <con:element>name</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>TobyPost</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>onhold</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>169ffbf1-b5d9-4056-bfa9-708c77692f62</con:expectedValue>
                  <con:caseSensitive>false</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{"name":"Toby","location":"Galway","status":"available","id":"169ffbf1-b5d9-4056-bfa9-708c77692f62"}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
            <con:parameterOrder/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="bf11b710-7edd-431e-ae2f-facdba90711a" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Update pet status and verify statusChanged event" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="multiConfigureTestStep" name="Subscribe to pets.statusChanged topic" id="847a5b14-54db-4062-9604-045155c4fea4">
        <con:settings/>
        <con:config activeStep="kafkaSubscribeTestStep" xsi:type="con:MultiConfigurationStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:kafkaSubscribeStep>
            <con:operationId>87fb3d7c-7d76-4028-afd3-62c6749c4d51</con:operationId>
            <con:operationName>Subscribe</con:operationName>
            <con:channelName>pets.statusChanged</con:channelName>
            <con:serviceName>Petstore Kafka - Pets</con:serviceName>
            <con:endpoint>kafka:9092</con:endpoint>
            <con:connectionProperties/>
            <con:schemaRegistry/>
            <con:environmentSpec>
              <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
                <con:authProfile>Inherit From Parent</con:authProfile>
              </con:entry>
            </con:environmentSpec>
            <con:messageType>JSON</con:messageType>
            <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
            <con:maxIdleTime>60</con:maxIdleTime>
            <con:maxMessagesReceived>50</con:maxMessagesReceived>
            <con:maxRunTime>60</con:maxRunTime>
            <con:assertion type="DataAndMetadataAssertion" id="aed037ca-b1f5-4424-b9e3-609855027f33" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['name']</con:path>
                  <con:element>name</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>TobyPost</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>${PATCH pet request#Response#$['status']}</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>${PATCH pet request#Response#$['id']}</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{"name":"TobyPost","location":"Galway","status":"available","id":"513409d6-26fd-4f97-a694-018252b5b2f8"}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
          </con:kafkaSubscribeStep>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="PATCH pet request" id="3ab8eecf-6e18-475a-8f8d-793895f15454">
        <con:settings/>
        <con:config service="Pets and Adoption API" resourcePath="/pets/{id}" methodName="patchPetStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="PATCH pet request" id="35cc33ed-3ef3-4e1f-816d-a5297e900d78" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://localhost:80/api</con:endpoint>
            <con:request>{\r
  "status" : "available"\r
}</con:request>
            <con:originalUri>http://localhost/api/pets/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="812b6cad-c783-447a-b501-6834902a50a7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="DataAndMetadataAssertion" id="70628f27-a63c-4e0d-8135-5fdae8c7132a" name="Smart Assertion">
              <con:configuration xsi:type="con:DataAndMetadataAssertion">
                <con:mode>Received Data</con:mode>
                <con:elements>
                  <con:path>$['name']</con:path>
                  <con:element>name</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>TobyPost</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['location']</con:path>
                  <con:element>location</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Galway</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['status']</con:path>
                  <con:element>status</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>available</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:elements>
                  <con:path>$['id']</con:path>
                  <con:element>id</con:element>
                  <con:operatorId>1</con:operatorId>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>${#[(Multi-Protocol) - Add PET - Update status - Verify events#Add Pet and verify event#POST pets]#Response#$['id']}</con:expectedValue>
                  <con:caseSensitive>true</con:caseSensitive>
                  <con:numberType>false</con:numberType>
                  <con:expectedDataType>1</con:expectedDataType>
                </con:elements>
                <con:originalMessage>{"name":"TobyPost","location":"Galway","status":"available","id":"513409d6-26fd-4f97-a694-018252b5b2f8"}</con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="id" value="${#[(Multi-Protocol) - Add PET - Update status - Verify events#Add Pet and verify event#POST pets]#Response#$['id']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="e51b1cc5-5745-4520-9ab0-7089e48ad5a1" name="Kafka Docker local" index="0">
    <con:service type="Message-Driven" name="Petstore Kafka - Pets">
      <con:endpoint authProfile="No Authorization" connectionSettingsId="43c29a23-ed0e-41be-82f7-155c1f868d44" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">127.0.0.1:9092</con:endpoint>
    </con:service>
    <con:service type="REST" name="Pets and Adoption API">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:80/api</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:environmentSpec>
    <con:entry environmentId="e51b1cc5-5745-4520-9ab0-7089e48ad5a1">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
  <con:kafkaConnectionSettingsContainer>
    <con:connectionSettings id="43c29a23-ed0e-41be-82f7-155c1f868d44">
      <con:subscribeProperties/>
      <con:publishProperties/>
      <con:schemaRegistry>
        <con:url/>
        <con:authProfile>No Authorization</con:authProfile>
      </con:schemaRegistry>
      <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
      <con:maxIdleTime>60</con:maxIdleTime>
      <con:maxMessagesReceived>50</con:maxMessagesReceived>
      <con:maxRunTime>60</con:maxRunTime>
      <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
    </con:connectionSettings>
  </con:kafkaConnectionSettingsContainer>
</con:soapui-project>
